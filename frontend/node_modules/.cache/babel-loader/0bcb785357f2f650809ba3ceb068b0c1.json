{"ast":null,"code":"import * as actionTypes from \"../constants/cartConstants\";\nconst CART_INITIAL_STATE = {\n  cartItems: []\n};\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/rickymemije/Desktop/Woz-U/GroupProject/the-technologically-enlightened/frontend/src/redux/reducers/cartReducers.js"],"names":["actionTypes","CART_INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,SAAS,EAAE;AADe,CAA3B;AAIA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,kBAAT,EAA6BI,MAA7B,KAAwC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,WAAW,CAACO,WAAjB;AACC,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AAEA,YAAMC,SAAS,GAAGN,KAAK,CAACF,SAAN,CAAgBS,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACd,eAAO,EACN,GAAGN,KADG;AAENF,UAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBY,GAAhB,CAAoBF,CAAC,IAC/BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAD/B;AAFL,SAAP;AAMA,OAPD,MAOO;AACN,eAAO,EACN,GAAGR,KADG;AAENF,UAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBM,IAArB;AAFL,SAAP;AAIA;;AACF,SAAKR,WAAW,CAACe,gBAAjB;AACC,aAAO,EACN,GAAGX,KADG;AAENF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBc,MAAhB,CAAuBJ,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcR,MAAM,CAACI,OAAjD;AAFL,OAAP;;AAID;AACC,aAAOL,KAAP;AAzBF;AA2BA,CA5BM","sourcesContent":["import * as actionTypes from \"../constants/cartConstants\";\n\nconst CART_INITIAL_STATE = {\n\tcartItems: [],\n};\n\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_TO_CART:\n\t\t\tconst item = action.payload;\n\n\t\t\tconst existItem = state.cartItems.find(x => x.product === item.product);\n\n\t\t\tif (existItem) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcartItems: state.cartItems.map(x =>\n\t\t\t\t\t\tx.product === existItem.product ? item : x\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcartItems: [...state.cartItems, item],\n\t\t\t\t};\n\t\t\t}\n\t\tcase actionTypes.REMOVE_FROM_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: state.cartItems.filter(x => x.product !== action.payload),\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}